---
import { ClipboardCopy } from "@astro-github-elements/clipboard-copy";

const { attempt } = Astro.params;
const response = await fetch(`http://localhost:8080/api/attempts/${attempt}`);
const data = await response.json();
console.log(data);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Attempt Details</title>
  </head>
  <body
    class="bg-slate-100 text-slate-900 min-h-screen min-w-screen mx-auto flex flex-col"
  >
    <header>
      <nav class="px-8 py-4" x-data="{headerOpen: false}">
        <ul
          class="md:flex shadow-lg w-full border border-slate-500 bg-slate-600 text-slate-100 justify-between rounded-lg px-8 relative"
        >
          <li class="px-2 py-4 hover:text-slate-400 transition">
            <a href="#">QuizMe</a>
          </li>

          <li
            x-show="headerOpen"
            class="px-2 py-4 hover:text-slate-400 transition"
          >
            <a href="#">MyQuizzes</a>
          </li>
          <li class="hidden md:block px-2 py-4 hover:text-slate-400 transition">
            <a href="#">MyQuizzes</a>
          </li>

          <li
            x-show="headerOpen"
            class="px-2 py-4 hover:text-slate-400 transition"
          >
            <a href="/attempts">MyAttempts</a>
          </li>
          <li class="hidden md:block px-2 py-4 hover:text-slate-400 transition">
            <a href="/attempts">MyAttempts</a>
          </li>

          <li
            x-show="headerOpen"
            class="px-2 py-4 hover:text-slate-400 transition"
          >
            <a href="#">JT</a>
          </li>
          <li class="hidden md:block px-2 py-4 hover:text-slate-400 transition">
            <a href="#">JT</a>
          </li>

          <li class="absolute top-4 right-8 md:hidden">
            <button
              class="lg:hidden"
              x-bind:class="headerOpen ? 'rotate-90 transition' : 'transition'"
              @click="headerOpen = !headerOpen"
              class="px-2 py-4 hover:text-slate-400"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-6 h-6"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
              </svg>
            </button>
          </li>
        </ul>
      </nav>
    </header>
    <main class="p-8 flex-grow space-y-8 mx-auto">
      <div class="flex justify-between items-baseline">
        <h1 class="text-4xl font-bold">{data.quiz_title}</h1>
        <div class="text-2xl">
          Your Score: {data.score} / {data.question_count}
        </div>
      </div>
      {
        data.questions.map((question) => (
          <>
            <div class="border-16 border-slate-400 rounded-lg p-6 text-center space-y-8 bg-slate-200 shadow-lg">
              <h2 class="text-2xl">
                <span class="font-bold mr-2">Question:</span> {question.text}
              </h2>
              <div>
                <h3 class="text-2xl font-bold mb-4">Answers</h3>
                <div class="grid grid-cols-2 gap-4 text-lg">
                  {question.answers.map((answer) => (
                    <div class="border border-slate-400 rounded-lg py-4 px-4">
                      <div
                        class={
                          answer.is_correct
                            ? "text-green-600"
                            : answer.user_chose && !answer.is_correct
                            ? "text-red-500"
                            : ""
                        }
                      >
                        {answer.text}{" "}
                        {answer.user_chose && answer.is_correct
                          ? "(Correct)"
                          : answer.user_chose && !answer.is_correct
                          ? "(Wrong)"
                          : ""}
                      </div>
                    </div>
                  ))}
                </div>
                <div class="flex justify-end px-8 py-4">
                  <div />
                  <div class="text-2xl">
                    Score: {question.user_guessed_right ? "1" : "0"}
                  </div>
                </div>
              </div>
            </div>
          </>
        ))
      }

      <div class="flex justify-center">
        <ClipboardCopy
          class="px-8 py-4 font-semibold bg-slate-600 text-slate-100 hover:bg-slate-500 rounded-lg transition shadow-lg text-xl"
          value={"I just got a score of " +
            data.score +
            " out of " +
            data.question_count +
            " on the " +
            data.quiz_title +
            " quiz on QuizMe!  Want to check it out?  Try it out here: https://localhost/quiz/" +
            data.quiz_id}
        >
          Share your score!
        </ClipboardCopy>
      </div>
    </main>
    <footer class="text-center my-auto">&copy; 2023 QuizMe Inc.</footer>
  </body>
</html>
